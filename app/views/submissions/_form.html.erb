<%= form_for(@submission, html: { class: 'directUpload', data: { 'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host } }) do |f| %>
  <%= render 'shared/error_messages', object: f.object %>

  <div class="form-group">
    <%= f.label :name, "Project Name" %>
    <%= f.text_field :name, class: 'form-control' %>
  </div>

  <div class="form-group">
    <%= f.label :description %>
    <%= f.text_area :description, class: 'form-control' %>
  </div>

  <h3>Team Members</h3>
  <div id="team_member">
    <%= f.fields_for :team_members do |team_member| %>
      <%= render 'team_member_fields', :f => team_member %>
    <% end %>
    <div class="links">
      <%= link_to_add_association 'Add team member', f, :team_members, class: 'btn btn-primary' %>
    </div>
  </div>

  <h3>Attach Project Photos</h3>
  <div id="attachments">
    <%= f.fields_for :attachments do |attachment| %>
      <%= render 'attachment_fields', :f => attachment %>
    <% end %>
    <div class="links">
      <%= link_to_add_association 'Add attachment', f, :attachments, class: 'btn btn-primary' %>
    </div>
  </div>

  <%= f.submit yield(:button_text), class: "btn btn-primary" %>
  <%= f.submit "#{yield(:button_text)} and submit for judging", class: "btn btn-primary", name: 'submit_judges',  data: { confirm: "This will submit this award application for judging. You will not be able to edit this any more. Are you sure?" } %>
<% end %>

<script>
  $('#attachments').on('cocoon:after-insert', function(e, insertedItem) {
      insertedItem.find("input:file").each(function(i, elem) {
          var fileInput    = $(elem);
          var form         = $(fileInput.parents('form:first'));
          var submitButton = form.find('input[type="submit"]');
          var progressBar  = $("<div class='bar'></div>");
          var barContainer = $("<div class='progress'></div>").append(progressBar);
          fileInput.after(barContainer);
          fileInput.fileupload({
              fileInput:       fileInput,
              url:             form.data('url'),
              type:            'POST',
              autoUpload:       true,
              formData:         form.data('form-data'),
              paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
              dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
              replaceFileInput: false,
              progressall: function (e, data) {
                  var progress = parseInt(data.loaded / data.total * 100, 10);
                  progressBar.css('width', progress + '%')
              },
              start: function (e) {
                  submitButton.prop('disabled', true);

                  progressBar.
                  css('background', 'green').
                  css('display', 'block').
                  css('width', '0%').
                  text("Loading...");
              },
              done: function(e, data) {
                  submitButton.prop('disabled', false);
                  progressBar.text("Uploading done");

                  // extract key and generate URL from response
                  var key   = $(data.jqXHR.responseXML).find("Key").text();
                  var url   = '//' + form.data('host') + '/' + key;

                  // create hidden field
                  insertedItem.find('.url-holder').val(url);
              },
              fail: function(e, data) {
                  submitButton.prop('disabled', false);

                  progressBar.
                  css("background", "red").
                  text("Failed");
              }
          });
      });
  });
</script>