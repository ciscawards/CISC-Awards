<%= form_for(@submission, validate: true, html: { class: 'form-pad-bottom', data: { 'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host } }) do |f| %>
  <%= render 'shared/error_messages', object: f.object %>

  <div class="row">
    <div class="col-md-12">
      <h3>General Project Information</h3>
      <div class="well">
        <div class="form-group">
          <%= f.label :name, "Project name" %>
          <%= f.text_field :name, class: 'form-control' %>
        </div>

        <div class="form-group">
          <%= f.label :steelwork_completion_date, "Estimated date of steelwork completion" %>
          <%= f.text_field :steelwork_completion_date, data:{ provide:'datepicker' }, class: 'form-control' %>
        </div>

        <div class="form-group">
          <%= f.label :project_location %>
          <%= f.text_area :project_location, class: 'form-control no-wysiwyg' %>
        </div>

        <div class="form-group">
          <%= f.label :brief_description %>
          <%= f.text_area :brief_description, class: 'form-control' %>
          <small id="emailHelp" class="form-text text-muted">A 125 word introductory paragraph describing the project for use in Awards promotional materials.</small>
        </div>

        <div class="form-group">
          <%= f.label :description, "Full description" %>
          <%= f.text_area :description, class: 'form-control' %>
        </div>

        <div class="form-group">
          <%= f.label :cisc_number, "CISC - Alberta Region Member Involved" %>
          <%= f.number_field :cisc_number, class: 'form-control' %>
          <div class="checkbox">
            <label>
              <%= f.check_box :contact_cisc %> Check here if you are not sure and a Planning Team member will follow up with you.
              For a list of current Alberta CISC members, please click <%= link_to "here", "http://applications.cisc-icca.ca/MembersDirectory.aspx?cfmchopcode=AB&cfmchq=region&rurl=public_site/directory/search_map.asp", target: "_blank" %>.
            </label>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <h3>Team Members</h3>
      <div id="team_member">
        <%= f.fields_for :team_members do |team_member| %>
          <%= render 'team_member_fields', :f => team_member %>
        <% end %>
        <div class="links">
          <%= link_to_add_association 'Add team member', f, :team_members, class: 'btn btn-primary btn-block' %>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <h3>Categories</h3>
      <p>Please select the categories in which you would like to enter the project.
        Note: The judging panel has the ability to shift projects to different categories as they deem appropriate based upon their review of all submissions.</p>
      <div>
        <%= f.fields_for :submission_categories do |submission_category| %>
          <%= render 'submission_category_fields', :f => submission_category %>
        <% end %>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <h3>Attach Project Photos</h3>
      <div id="attachments">
        <%= f.fields_for :attachments do |attachment| %>
          <%= render 'attachment_fields', :f => attachment %>
        <% end %>
        <div class="links">
          <%= link_to_add_association 'Add attachment', f, :attachments, class: 'btn btn-primary btn-block' %>
        </div>
      </div>
      <hr />
    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <div class="btn-group-vertical btn-block">
      <%= f.submit yield(:button_text), class: "btn btn-primary" %>
      <%= f.submit "#{yield(:button_text)} and submit for judging", class: "btn btn-primary", name: 'submit_judges',  data: { confirm: "This will submit this award application for judging. You will not be able to edit this any more. Are you sure?" } %>
      </div>
    </div>
  </div>
<% end %>

<script>
    $('#attachments').on('cocoon:after-insert', function(e, insertedItem) {
        insertedItem.find("input:file").each(function(i, elem) {
            var fileInput    = $(elem);
            var form         = $(fileInput.parents('form:first'));
            var submitButton = form.find('input[type="submit"]');
            var progressBar  = $("<div class='bar'></div>");
            var barContainer = $("<div class='progress'></div>").append(progressBar);
            fileInput.after(barContainer);
            fileInput.fileupload({
                fileInput:       fileInput,
                url:             form.data('url'),
                type:            'POST',
                autoUpload:       true,
                formData:         form.data('form-data'),
                paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
                dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
                replaceFileInput: false,
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    progressBar.css('width', progress + '%')
                },
                start: function (e) {
                    submitButton.prop('disabled', true);

                    progressBar.
                    css('background', 'green').
                    css('display', 'block').
                    css('width', '0%').
                    text("Loading...");
                },
                done: function(e, data) {
                    submitButton.prop('disabled', false);
                    progressBar.text("Uploading done");

                    // extract key and generate URL from response
                    var key   = $(data.jqXHR.responseXML).find("Key").text();
                    var url   = '//' + form.data('host') + '/' + key;

                    // create hidden field
                    insertedItem.find('.url-holder').val(url);
                },
                fail: function(e, data) {
                    submitButton.prop('disabled', false);

                    progressBar.
                    css("background", "red").
                    text("Failed");
                }
            });
        });
    });

    $('.apply-category').change(function(){
        var description = $(this).parent().parent().siblings('.category-description');
        description.toggle(this.checked);
        if (!this.checked) {
            description.find("textarea").froalaEditor('html.set', null);
        } else {
            description.find("textarea").froalaEditor('destroy');
            description.find("textarea").froalaEditor($.fraola_creds);
        }
    });

    $(document).ready(function(){
        dropDownClean();
    });

    $('#team_member').on('cocoon:after-insert', function(e, insertedItem) {
        dropDownClean()
    });

    function dropDownClean () {
        $(".title-selector").filter(function(){return this.value !== "<%= t('submission.team_member.titles.other') %>"}).trigger('change');
    }

    //TODO: Need to setup an autosave here.
</script>
